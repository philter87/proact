# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables:
  Major: '0'
  Minor: '2'
  Patch: '0'

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- task: UseDotNet@2
  displayName: 'Install .NET Core SDK'
  inputs:
    version: 6.x
    performMultiLevelLookup: true
    includePreviewVersions: true
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    arguments: '--configuration Release'
  displayName: 'dotnet build Release'
- task: NuGetCommand@2
  inputs:
    command: pack
    packagesToPack: 'Proact.Core/Proact.Core.csproj'
    packDestination: '$(Build.ArtifactStagingDirectory)'
    versioningScheme: byPrereleaseNumber
    configuration: 'Release'
    majorVersion: $(Major)
    minorVersion: $(Minor)
    patchVersion: $(Patch)
- task: NuGetCommand@2
  inputs:
    command: pack
    packagesToPack: 'Proact.Web/Proact.Web.csproj'
    packDestination: '$(Build.ArtifactStagingDirectory)'
    versioningScheme: byPrereleaseNumber
    configuration: 'Release'
    majorVersion: $(Major)
    minorVersion: $(Minor)
    patchVersion: $(Patch)
- task: NuGetCommand@2
  displayName: 'NuGet push'
  inputs:
    command: push
    nuGetFeedType: external
    publishFeedCredentials: NugetProactServiceConnection
- script: dotnet publish .\Proact.Page/Proact.Page.csproj -o ./Proact.Page/publish
  displayName: "Build Azure function code "
- task: ArchiveFiles@2
  displayName: "Archive build artifact"
  inputs:
    rootFolderOrFile: './Proact.Page/publish'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: './Proact.Page/publish.zip'
    replaceExistingArchive: true
- publish: ./Proact.Page/publish.zip
  displayName: 'Persist pipeline artifact for deployments'
  artifact: drop